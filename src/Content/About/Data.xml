<?xml version="1.0" encoding="utf-8" ?>
<About>
	<!-- The App element allows you to override the values that are extracted from the WMAppManifest.xml file automatically -->
	<!-- The AdditionalNotes attribute has no equivalent in the WMAppManifest.xml; you can only define its content here -->
	<!-- New in 1.1: Explicitly set any of the attributes to an empty string to remove it (including its label) from the dialog -->
	<App Author="Lagge"
		 Publisher=""       
			 AdditionalNotes="All data is aqcuired from the cinebel.be site. Expect new features soon!" />
	<Items>
		<!-- Create a MainItem entry to configure the front page -->
		<!-- The Titel attribute defines the title of the pivot item -->
		<!-- The Label (and review buttong content) attributes can override the default values to what you like, and also help with localization -->
		<MainItem Title="about"
							AppAuthorLabel="by"
							AppDescriptionLabel="Description:"
							AppPublisherLabel="Publisher:"
							AppVersionLabel="Version:"
							AppAdditionalNotesLabel="Additional Notes:"
							AppReviewButtonContent="Review this app!">
			<Links>
				<!-- A collection of links presented on the front page. -->
				<!-- By using different protocols like http or mailto you can invoke the respective applications -->
				<!-- The Label attribute defines an additional label placed in front of the hyperlink -->
				<!-- Use this to provide contact/support details for your app -->
				<Link NavigateUri="http://timdams.wordpress.com"
							Content="http://timdams.wordpress.com"
							Label="Web:" />
				<Link NavigateUri="mailto:dams.tim@telenet.be"
							Content="Contact me"
							Label="Support:" />

			</Links>
		</MainItem>
		<!-- For each additional pivot item, add a separate Item entry. Ideas for items are: license, tutorial or help, version history, show room for other apps from you etc. -->
		<!-- The Title attribute defines the title of the pivot item -->
		<!-- Each Item can be a remote item (fetched from a Uri) or a local item (using its content), or both (local content is the fallback value if fetching the network content fails) -->
		<!-- Supported types are "text" and "xaml", where text is nicely formatted automatically, and XAML is handled by the built-in XamlReader -->
		<Item Title="history"
					Type="text">
			
      1.2.1.0
      Parsing bug removed: borders are back.
      
			1.2.0.0
      New settings page.
      Performance and UI changes.
			
      1.1.0.0
			See what's playing today in the main page.
			
      1.0.0.0
			This is the initial public version.

		</Item>

	</Items>
</About>